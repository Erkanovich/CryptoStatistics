// <auto-generated />
using System;
using CryptoStatistics;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CryptoStatistics.Migrations
{
    [DbContext(typeof(CryptoStatisticsContext))]
    [Migration("20210324144031_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CryptoStatistics.Models.GfxSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClockFrequency")
                        .HasColumnType("int");

                    b.Property<int>("MemoryFrequency")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Voltage")
                        .HasColumnType("int");

                    b.Property<int>("Wattage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GfxSettings");
                });

            modelBuilder.Entity("CryptoStatistics.Models.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GfxSettingsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MegaHashesPerSecond")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCompletions")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfErrors")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfStales")
                        .HasColumnType("int");

                    b.Property<DateTime>("SessionEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SessionStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GfxSettingsId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("CryptoStatistics.Models.Session", b =>
                {
                    b.HasOne("CryptoStatistics.Models.GfxSettings", "GfxSettings")
                        .WithMany("Sessions")
                        .HasForeignKey("GfxSettingsId");

                    b.Navigation("GfxSettings");
                });

            modelBuilder.Entity("CryptoStatistics.Models.GfxSettings", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
